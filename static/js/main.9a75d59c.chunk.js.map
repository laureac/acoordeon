{"version":3,"sources":["components/Chevron.js","components/Accordeon.js","pages/Classes.js","App.js","serviceWorker.js","index.js"],"names":["Chevron","props","className","height","width","xmlns","viewBox","fill","d","Accordeon","useState","activeState","setActiveState","setHeight","rotate","setRotate","content","useRef","onClick","current","scrollHeight","title","ref","style","maxHeight","dangerouslySetInnerHTML","__html","Classes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mPAoBeA,MAlBf,SAAiBC,GACb,OACI,6BACI,yBACAC,UAAWD,EAAMC,UACjBC,OAAQF,EAAME,OACdC,MAAOH,EAAMG,MACZC,MAAM,6BACNC,QAAQ,eACJ,0BACGC,KAAMN,EAAMM,KACZC,EAAE,iSCmBPC,MA7Bf,SAAmBR,GAAQ,IAAD,EAEgBS,mBAAS,IAFzB,mBAEfC,EAFe,KAEFC,EAFE,OAGMF,mBAAS,OAHf,mBAGfP,EAHe,KAGPU,EAHO,OAIMH,mBAAS,IAJf,mBAIfI,EAJe,KAIPC,EAJO,KAMhBC,EAAUC,iBAAO,MASvB,OACQ,yBAAKf,UAAU,qBACX,4BAAQA,UAAS,oBAAeS,GAAeO,QAT3D,SAAyBjB,GACrBW,EAAgC,KAAhBD,EAAqB,SAAW,IAChDE,EAA0B,WAAhBF,EAA2B,MAA3B,UAAsCK,EAAQG,QAAQC,aAAtD,OACVL,EAA0B,WAAhBJ,EAA2B,GAA3B,YAOE,wBAAIT,UAAU,mBAAmBD,EAAMoB,OACvC,kBAAC,EAAD,CAASnB,UAAS,yBAAoBY,GAAUV,MAAO,GAAIG,KAAM,aAErE,yBAAKe,IAAKN,EAASO,MAAO,CAACC,UAAU,GAAD,OAAKrB,IAAWD,UAAU,qBAC1D,yBAAKA,UAAU,iBAAiBuB,wBAAyB,CAACC,OAAQzB,EAAMe,cCsB7EW,MA5Cf,SAAiB1B,GACb,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,eACX,yEACA,sKAEJ,yBAAKA,UAAU,mBACX,kBAAC,EAAD,CACAmB,MAAM,oCACNL,QAAQ,8SAIR,kBAAC,EAAD,CACAK,MAAM,6BACNL,QAAQ,iaAIR,kBAAC,EAAD,CACAK,MAAM,qBACNL,QAAQ,0gBAGR,kBAAC,EAAD,CACAK,MAAM,uBACNL,QAAQ,sNAKR,kBAAC,EAAD,CACAK,MAAM,uCACNL,QAAQ,yN,KCpBTY,MAZf,WACE,OACE,yBAAK1B,UAAU,OACb,4BAAQA,UAAU,eAElB,6BACE,kBAAC,EAAD,SCCY2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9a75d59c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Chevron(props) {\r\n    return (\r\n        <div>\r\n            <svg\r\n            className={props.className}\r\n            height={props.height}\r\n            width={props.width}\r\n             xmlns=\"http://www.w3.org/2000/svg\" \r\n             viewBox=\"0 0 320 512\">\r\n                 <path \r\n                    fill={props.fill} \r\n                    d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\">\r\n                 </path>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chevron;","import React, {useState, useRef} from 'react';\r\nimport Chevron from './Chevron';\r\n\r\nfunction Accordeon(props) {\r\n\r\n    const [activeState, setActiveState] = useState('')\r\n    const [height, setHeight] = useState('0px')\r\n    const [rotate, setRotate] = useState('')\r\n\r\n    const content = useRef(null)\r\n\r\n    function toggleAccordeon(props){\r\n        setActiveState( activeState === '' ? 'active' : '')\r\n        setHeight(activeState === 'active' ? '0px' : `${content.current.scrollHeight}px`);\r\n        setRotate(activeState === 'active' ? '' : `rotate`);\r\n        \r\n    }\r\n\r\n    return (\r\n            <div className='accordeon-wrapper'>\r\n                <button className={`accordeon ${activeState}`} onClick={toggleAccordeon}>\r\n                    <h3 className='accordeon-title'>{props.title}</h3>\r\n                    <Chevron className={`accordeon-icon ${rotate}`} width={10} fill={'#000000'}/>\r\n                </button>\r\n                <div ref={content} style={{maxHeight: `${height}`}} className='accordeon-content'>\r\n                    <div className='accordeon-text' dangerouslySetInnerHTML={{__html: props.content}}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Accordeon;","import React from 'react';\r\nimport Accordeon from '../components/Accordeon';\r\n\r\nfunction Classes(props) {\r\n    return (\r\n        <div className='main'>\r\n            <div className='main-header'>\r\n                <h2>Welcome, itâ€™s so lovely to meet you.</h2>\r\n                <p>Nulla ad tempor cupidatat culpa exercitation. Voluptate mollit aliquip elit ex incididunt labore minim reprehenderit eu sunt magna ex.</p>\r\n            </div>\r\n            <div className='content-section'>\r\n                <Accordeon \r\n                title='Nulla culpa ad sit occaecat esse.'\r\n                content='\r\n                <p>Pariatur reprehenderit enim Lorem fugiat culpa. Commodo velit quis officia elit. Esse amet deserunt excepteur reprehenderit deserunt occaecat occaecat. Id proident non reprehenderit nisi nostrud irure laboris minim eu.</p>\r\n                </br>\r\n                <p>Laboris sit nisi proident consequat laboris aliqua.</p>'/>\r\n                <Accordeon \r\n                title='Id mollit consectetur sit.'\r\n                content='\r\n                <p>Do consequat anim cillum aute aliqua. Magna minim aliquip duis nisi consequat esse. Ea consectetur irure magna consectetur ea non laboris qui elit eiusmod sit exercitation aliquip laborum. Culpa excepteur cupidatat culpa nisi minim elit tempor minim reprehenderit enim sit exercitation in.</p>\r\n                </br>\r\n                <p>Officia elit exercitation sit laborum incididunt proident aliqua consectetur ea nulla duis est.</p>'/>\r\n                <Accordeon \r\n                title='Magna irure velit.'\r\n                content='\r\n                <p>Laborum ut elit occaecat proident minim occaecat cillum minim ea tempor incididunt. Incididunt aliquip non commodo eiusmod nostrud nostrud commodo commodo. Sint elit id esse amet consectetur reprehenderit officia adipisicing magna et ea. In sit cillum sit tempor aliquip qui nostrud ea non fugiat consectetur elit mollit incididunt. Fugiat exercitation deserunt aute cupidatat reprehenderit dolore in consequat sit amet. Laborum nostrud cillum cupidatat irure ex eiusmod sit consectetur do dolor commodo.</p>\r\n                 '/>\r\n                <Accordeon \r\n                title='Excepteur dolor sit.'\r\n                content='\r\n                <p>Laborum ut elit occaecat proident minim occaecat cillum minim ea tempor incididunt.</p>\r\n                </br>\r\n                <p>Officia elit exercitation sit laborum incididunt proident aliqua consectetur ea nulla duis est.</p>\r\n                 '/>\r\n                <Accordeon \r\n                title='Proident voluptate amet labore sint.'\r\n                content='\r\n                <p>Laborum ut elit occaecat proident minim occaecat cillum minim ea tempor incididunt.</p>\r\n                </br>\r\n                <p>Officia elit exercitation sit laborum incididunt proident aliqua consectetur ea nulla duis est.</p>\r\n                 '/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Classes;","import React from 'react';\nimport './App.scss';\nimport Classes from './pages/Classes';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <div>\n        <Classes />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}